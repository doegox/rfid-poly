#!/usr/bin/python#application.pyfrom ReaderTagManager import readerTagManagerfrom UI import userInterfacefrom reader import abstractReaderfrom dataHandler import *import stringrtm = readerTagManager()ui = userInterface()readerlist = []reader = Nonetag = NonenormalUserMode = TrueAPDUConsoleMode = FalseuserTypeExit = Falsewhile not userTypeExit:   if rtm.hasNewEvent():       rtmevent = rtm.getNewEvent()       if rtmevent.getEventType() == "Reader is plugin":           ui.printNewReaderInfo(rtmevent.getReaderAddData())       elif rtmevent.getEventType() == "Reader is removed":           ui.printRemovedReaderInfo(rtmevent.getReaderRemoveData())       elif rtmevent.getEventType() == "Tag is attached":           ui.printNewTagInfo(rtmevent.getTagAddData())       elif rtmevent.getEventType() == "Tag is removed":           ui.printRemovedTagInfo()       else:           assert(1/0)       readerlist = rtm.getReaderList()       tag = rtm.getTag()       if tag != None:          reader = rtm.getReaderInUse(tag.getTagInfo().getCorresponseReader())              if ui.hasNewEvent():       ui.clearEventFlag()       cmd = ui.getNewEvent().getCommand()       if normalUserMode:           if cmd == 'help':              ui.printShowNormalUserOptions()           elif cmd == 'list':              ui.printDeviceList(readerlist,tag)           elif string.find(cmd,'sel ') == 0:                if len(readerlist) < findNumberInString(cmd) or findNumberInString(cmd) <= 0:                   ui.printOutOfRange()                else:                   ui.printSelectReaderInfo(readerlist[findNumberInString(cmd)-1])           elif cmd == 'exit':                   userTypeExit = True           elif cmd == '':                pass           elif cmd == 'apdu':                normalUserMode = False                APDUConsoleMode = True           else:                ui.printUnknownCommand()       elif APDUConsoleMode:           if cmd == 'normal':              normalUserMode = True              APDUConsoleMode = False           elif cmd == 'help':              ui.printShowExpertUserOptions()           else:              if reader == None:                 ui.printNoReader()              else:                 if tag.getTagInfo().getIsAPDUSupported() == False:                    ui.printDoesntSupportAPDU()                 else:                    print stringToArray(cmd)                    ui.printReturnedAPDU(reader.transmitAPDU(stringToArray(cmd)))       else:           assert(1/0)       ui.setEventFlag()         